from gwf import Workflow, AnonymousTarget
import os
import pandas as pd
from groups import Group

# Uses the baboondiversity environment:
# tskit and argparse in addition to pandas

gwf = Workflow()
# path_to_poplabels = "data/pops/all_inds_8cluster.sample"  # Autosomal
# path_to_poplabels_females = "data/pops/all_females_8cluster.sample"  # Females only, for X
# path_to_poplabels_hapx = "data/pops/haploid_x_8cluster.sample" # Haploid X conversion
# Instead, I use the poplabels generated by Relates scripts

input_info = [["results/All_Samples_relate/chrom{}.trees",
               "steps/relate_All_Samples_prepared/chrom{}.poplabels"]]
            #   ["results/Ethiopian_Olive_relate/chrom{}.trees",
            #    "steps/relate_Ethiopian_Olive_prepared/chrom{}.poplabels",
            #    "all"]]
chromosomes = [20, "hapX"] # list(range(20, 21))+["X", "hapX"]
l_d = []


def relate_coal_ordering(tree, poplabels_path, ID):
    inputs = [tree]
    basepath = os.path.dirname(tree)
    treename = os.path.basename(tree)
    outputs = ["{}/analysis_chunks/{}_{}.txt".format(basepath, ID, treename[:-6])]
    options = {
        "cores": 3,
        "memory": "30g",
        "walltime": "12:00:00",
        "account": "baboondiversity"
    }
    spec = """
    python scripts/relate_coal_ordering.py -t {} -p {} -i {}
    """.format(tree, poplabels_path, ID)
    # print(spec)
    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)


def get_chrom_name(idx, target):
    c = os.path.splitext(os.path.basename(target.outputs[0]))[0]
    return '{}'.format(c)


chrom_label_list = []
for l in input_info:
    os.makedirs(os.path.dirname(l[0])+"/analysis_chunks", exist_ok=True)
    for chrom in chromosomes:
        poplabels = pd.read_csv(l[1].format(chrom), sep=" ",
                                names=["ID", "POP", "GROUP", "SEX"], header=0)
        for f_ID in poplabels.ID[:10]:
            chrom_label_list.append([l[0].format(chrom), l[1].format(chrom), f_ID])

gwf.map(relate_coal_ordering, chrom_label_list, name=get_chrom_name)